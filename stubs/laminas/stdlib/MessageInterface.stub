<?php

declare(strict_types = 1);

namespace Laminas\Stdlib;

use Laminas\Stdlib\Exception\InvalidArgumentException;

interface MessageInterface
{
    /**
     * Set metadata
     *
     * @param string|int|iterable<int|string, mixed> $spec
     * @param mixed                                  $value
     *
     * @return self
     *
     * @throws InvalidArgumentException
     *
     * @phpcsSuppress SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint
     * @phpcsSuppress SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint
     */
    public function setMetadata($spec, $value = null);

    /**
     * Get metadata
     *
     * @param string|int|null $key
     *
     * @return mixed
     *
     * @throws InvalidArgumentException
     *
     * @phpcsSuppress SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint
     * @phpcsSuppress SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint
     */
    public function getMetadata($key = null);

    /**
     * Set content
     *
     * @param mixed $content
     *
     * @return mixed
     *
     * @throws void
     *
     * @phpcsSuppress SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint
     * @phpcsSuppress SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint
     */
    public function setContent($content);

    /**
     * Get content
     *
     * @return mixed
     *
     * @throws void
     *
     * @phpcsSuppress SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint
     */
    public function getContent();
}
