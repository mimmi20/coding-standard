# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  - pull_request
  - push

name: "Continuous Integration"

env:
  PHP_EXTENSIONS: "json, opcache"
  PHP_INI_VALUES: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
  COMPOSER_OPTIONS: "--optimize-autoloader --prefer-dist --prefer-stable -v"
  TOOLS: "composer:v2"

jobs:
  supported-versions-matrix:
    name: "Supported Versions Matrix"

    runs-on: "ubuntu-20.04"
    timeout-minutes: 10
    continue-on-error: false

    outputs:
      extensions: ${{ steps.supported-versions-matrix.outputs.extensions }}
      version: ${{ steps.supported-versions-matrix.outputs.version }}
      version-all: ${{ steps.supported-versions-matrix-all.outputs.version }}
      upcoming: ${{ steps.supported-versions-matrix-all.outputs.upcoming }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "detect supported versions without upcoming versions"
        id: "supported-versions-matrix"
        uses: "WyriHaximus/github-action-composer-php-versions-in-range@v1"
        with:
          upcomingReleases: false

      - name: "detect supported versions with upcoming versions"
        id: "supported-versions-matrix-all"
        uses: "WyriHaximus/github-action-composer-php-versions-in-range@v1"
        with:
          upcomingReleases: true

  validate:
    name: "Validate composer"

    needs: "supported-versions-matrix"

    runs-on: "ubuntu-20.04"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.23.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ env.PHP_EXTENSIONS }}"
          ini-values: "${{ env.PHP_INI_VALUES }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}"

      - name: "Validate composer.json"
        run: "composer validate --strict"

  install:
    name: "Install dependencies"

    needs:
      - "supported-versions-matrix"
      - "validate"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: ${{ needs.supported-versions-matrix.outputs.upcoming == matrix.php-version }}

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version-all) }}

        dependencies:
          - "highest"
          - "lowest"

        composer-options:
          - ""

        include:
          - operating-system: "ubuntu-20.04"
            php-version: "8.2"
            dependencies: "highest"
            composer-options: " --ignore-platform-reqs"
          - operating-system: "ubuntu-20.04"
            php-version: "8.2"
            dependencies: "lowest"
            composer-options: " --ignore-platform-reqs"
          - operating-system: "ubuntu-22.04"
            php-version: "8.2"
            dependencies: "highest"
            composer-options: " --ignore-platform-reqs"
          - operating-system: "ubuntu-22.04"
            php-version: "8.2"
            dependencies: "lowest"
            composer-options: " --ignore-platform-reqs"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.23.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ env.PHP_EXTENSIONS }}"
          ini-values: "${{ env.PHP_INI_VALUES }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ env.COMPOSER_OPTIONS }}${{ matrix.composer-options }}"

      - name: "Check dependencies with composer"
        run: "composer outdated --direct"

  mega-lint:
    name: "Linting with nvuillam/mega-linter"

    needs:
      - "supported-versions-matrix"
      - "install"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.23.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ env.PHP_EXTENSIONS }}"
          ini-values: "${{ env.PHP_INI_VALUES }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          composer-options: "${{ env.COMPOSER_OPTIONS }}"

      - name: "Linter"
        # You can override Mega-Linter flavor used to have faster performances
        # More info at https://nvuillam.github.io/mega-linter/flavors/
        uses: "nvuillam/mega-linter/flavors/php@v6.16.0"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  php-lint:
    name: "Linting with overtrue/phplint"

    needs:
      - "supported-versions-matrix"
      - "install"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.23.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ env.PHP_EXTENSIONS }}"
          ini-values: "${{ env.PHP_INI_VALUES }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}"

      - name: "Lint PHP"
        uses: "overtrue/phplint@8.2"

  php-cs-fixer:
    name: "Check Coding Standards with PHP-CS-Fixer"

    needs:
      - "supported-versions-matrix"
      - "mega-lint"
      - "php-lint"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.23.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ env.PHP_EXTENSIONS }}"
          ini-values: "${{ env.PHP_INI_VALUES }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}, cs2pr"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          composer-options: "${{ env.COMPOSER_OPTIONS }}"

      - name: "Run friendsofphp/php-cs-fixer"
        run: "vendor/bin/php-cs-fixer fix --dry-run --format=checkstyle | cs2pr"

  phpcs:
    name: "Check Coding Standards with PHPCS"

    needs:
      - "supported-versions-matrix"
      - "mega-lint"
      - "php-lint"

    runs-on: "${{ matrix.operating-system }}"
    timeout-minutes: 10
    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-20.04"
          - "ubuntu-22.04"

        php-version: ${{ fromJson(needs.supported-versions-matrix.outputs.version) }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.23.0"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ join(fromJson(needs.supported-versions-matrix.outputs.extensions), ', ') }}, ${{ env.PHP_EXTENSIONS }}"
          ini-values: "${{ env.PHP_INI_VALUES }}"
          coverage: "none"
          tools: "${{ env.TOOLS }}, cs2pr"

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          composer-options: "${{ env.COMPOSER_OPTIONS }}"

      - name: "Run squizlabs/php_codesniffer"
        run: "vendor/bin/phpcs -wps --colors --standard=src/mimmi20-cs/ruleset.xml --report=checkstyle -q src .php-cs-fixer.php | cs2pr"
